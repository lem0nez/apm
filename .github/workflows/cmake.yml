name: CMake
on: [push]
env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++, clang++]
        jdk-version: [8, 11, 13, 16]
        sdk-api: [28]

    steps:
      - name: Checkout APM
        uses: actions/checkout@v2

      - name: Checkout cxxopts
        uses: actions/checkout@v2
        with:
          repository: jarro2783/cxxopts
          ref: v2.2.1
          path: cxxopts

      - name: Install cxxopts
        working-directory: cxxopts
        run: |
          cmake .
          sudo cmake --install .

      - name: Checkout pugixml
        uses: actions/checkout@v2
        with:
          repository: zeux/pugixml
          ref: v1.11.4
          path: pugixml

      - name: Install pugixml
        working-directory: pugixml
        run: |
          cmake .
          sudo make install

      - name: Checkout libzip
        uses: actions/checkout@v2
        with:
          repository: nih-at/libzip
          ref: v1.8.0
          path: libzip

      - name: Install libzip
        working-directory: libzip
        run: |
          cmake . -DENABLE_OPENSSL=OFF -DENABLE_BZIP2=OFF -DENABLE_LZMA=OFF \
                  -DBUILD_TOOLS=OFF -DBUILD_REGRESS=OFF -DBUILD_EXAMPLES=OFF \
                  -DBUILD_DOC=OFF
          sudo make install

      - name: Checkout libzippp
        uses: actions/checkout@v2
        with:
          repository: ctabin/libzippp
          ref: libzippp-v4.1-1.8.0
          path: libzippp

      - name: Install libzippp
        working-directory: libzippp
        run: |
          cmake . -DLIBZIPPP_BUILD_TESTS=OFF
          sudo make install

      - name: Install OpenJDK
        env:
          VERSION: ${{ matrix.jdk-version }}
        run: sudo apt install openjdk-$VERSION-jdk

      - name: Checkout JNI wrapper
        uses: actions/checkout@v2
        with:
          repository: mapbox/jni.hpp
          ref: v4.0.1
          path: jni-hpp

      - name: Install JNI wrapper
        working-directory: jni-hpp
        run: |
          sudo install --mode=644 -D \
              --target-directory=/usr/local/include/jni/ include/jni/*

      - name: Checkout PStreams
        uses: actions/checkout@v2
        with:
          repository: jwakely/pstreams
          ref: 012f33d55222552bf84087a4e1e3ced6ecae203d # v1.0.3
          path: pstreams

      - name: Install PStreams
        working-directory: pstreams
        run: |
            sudo install --mode=644 -D \
                --target-directory=/usr/local/include/pstreams/ pstream.h

      - name: Install cURL library
        run: sudo apt install libcurl4-openssl-dev

      - name: Checkout C++ Requests
        uses: actions/checkout@v2
        with:
          repository: whoshuu/cpr
          ref: 1.6.2
          path: cpr

      - name: Install C++ Requests
        working-directory: cpr
        run: |
          cmake . -DCPR_FORCE_USE_SYSTEM_CURL=ON -DCPR_BUILD_TESTS=OFF
          sudo make install

      - name: Checkout Friendly CLI
        uses: actions/checkout@v2
        with:
          repository: lem0nez/friendly-cli
          ref: v1.4.0
          path: fcli

      - name: Install Friendly CLI
        working-directory: fcli
        run: |
          cmake . -DBUILD_TESTING=OFF
          sudo make install

      - name: Checkout doctest
        uses: actions/checkout@v2
        with:
          repository: onqtam/doctest
          ref: 2.4.6
          path: doctest

      - name: Install doctest
        working-directory: doctest
        run: |
          cmake .
          sudo cmake --install .

      - name: Create build directory
        run: cmake -E make_directory build/

      - name: Configure CMake
        working-directory: build
        env:
          CXX: ${{ matrix.compiler }}
          JAVA_HOME: /usr/lib/jvm/java-${{ matrix.jdk-version }}-openjdk-amd64
        run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        run: cmake --build build/

      - name: Install SDK
        env:
          API: ${{ matrix.sdk-api }}
        run: env --ignore-environment HOME=sdk build/apm --set-up <<< $API

      - name: Test
        run: build/test --duration --sdk-home=sdk/

      - name: Install
        run: sudo cmake --install build/
